spring.application.name=Backend

#CONFIGURACION DE LA BASE DE DATOS PARA PRODUCCIÓN
spring.datasource.url=jdbc:postgresql://ep-steep-smoke-a5gi37hb.us-east-2.aws.neon.tech:5432/neondb
spring.datasource.username=neondb_owner
spring.datasource.password=npg_2bLXV3ERivrG
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

#CONFIGURACIÓN PARA USAR LA BASE DE DATOS DE TESTING
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.sql.init.platform=h2
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#Esta línea hace que Hibernate cree el esquema de la BD desde cero cada vez que se inicia la aplicación
#Lo estoy usando para no tener que definir el esquema a mano y también para que no hayan problemas si mi
#esquema y el que espera Hibernate difieren
#ES MUY IMPORTANTE DESACTIVAR ESTO SI QUEREMOS MANTENER ALMACENADOS LOS DATOS, PORQUE SI NO CUANDO SE 
#REINICE LA APLICACIÓN SE BORRAN
#Modo de uso recomendado: solo usarlo una vez para que Hibernate defina el esquema y luego desactivarlo
#

# Estas configuraciones son para el actuator (monitoreo)
management.endpoints.web.exposure.include=health,info,mappings
management.endpoint.info.access=read-only
management.endpoint.health.show-details=when-authorized
management.endpoint.mappings.access=read-only